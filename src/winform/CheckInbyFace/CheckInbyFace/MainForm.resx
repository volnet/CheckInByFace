<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiIgAiIiICIiIiIyIiIl0iIiKiIiIi0iIi
        Iu4iIiL/IiIi/yIiIu4iIiLSIiIioiIiIl0iIiIjIiIiAiIiIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiIgAiIiIBIiIiKSIiIo0iIiLZIiIi4CIi
        IrwiIiKTIiIicCIiImoiIiJqIiIicCIiIpMiIiK8IiIi4CIiItkiIiKNIiIiKSIiIgEiIiIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIAIiIiEyIiIn0iIiLcIiIixyIi
        Im4iIiIqIiIiCSIiIgAiIiIAAAAAAAAAAAAiIiIAIiIiACIiIgkiIiIqIiIibiIiIsciIiLcIiIifSIi
        IhMiIiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUEAODMOABgeJS4fISO2HyEj2xwg
        I2sNGCoOGCQZAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAYJBkADRgqDhwg
        I2sfISPbHyEjthgeJS44Mw4AAAlBAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiIiALZfAABfOxM7ZD0S1F06
        FPiASQudr1wAaK5cAGmsWwBrrFsAa6xbAGusWwBrrFsAa6xbAGusWwBrrFsAa6xbAGusWwBrrFsAa6xb
        AGuuXABpr1wAaIBJC51dOhT4Zj4R1YBJCz/KZwAAIiIiAAAAAAAAAAAAAAAAAAAAAAAiIiIAFx0lLksz
        GNOmWQL9rlwA5K1cAOCsWwDirFsA4qxbAOKsWwDirFsA4qxbAOKsWwDirVsA4a1bAOGsWwDirFsA4qxb
        AOKsWwDirFsA4qxbAOKsWwDirVwA4K1cAOSsWwD9Zz4R0xQcJS4iIiIAAAAAAAAAAAAAAAAAIiIiACIi
        IhQfISO2SDIZ66laAeCtWwA5rFsAHaxbAB6sWwAerFsAHq1bAB68YQAbrVsCHoVLCipqQBA6akAQOoVL
        CiqtWwIevGEAG61bAB6sWwAerFsAHqxbAB6sWwAdrFsAOa1cAORdOhP6HyEjtiIiIhQiIiIAAAAAACIi
        IgAiIiIAIiIifyAhI9lwQg9zrVwA1qxbAB+sWwAAAAAAAAAAAAATGyYADRgoAx0gIzYgISKSISEixiEh
        It0hISLdISEixiAhIpIdICM2DRgoAxMbJgAAAAAAAAAAAKxbAACsWwAerVwA4IBJC5wfISPYIiIifyIi
        IgAiIiIAIiIiACIiIioiIiLaHSAjba5cAECsWwDYrFsAH6xbAAAAAAAAIiIiACIiIhEiIiJ+IiIi4iIi
        IsIiIiKCIiIiayIiImsiIiKCIiIiwiIiIuIiIiJ+IiIiESIiIgAAAAAArFsAAKxbAB6sWwDirVwAahwg
        I2wiIiLaIiIiKiIiIgAiIiIAIiIijSIiIsUAEysPrlwAQKxbANisWwAfrFsAACIiIgAiIiIKIiIimyIi
        IuUiIiJgIiIiDCIiIgAiIiIAIiIiACIiIgAiIiIMIiIiYCIiIuUiIiKbIiIiCiIiIgCsWwAArFsAHqxb
        AOKuXABqAA8tDiIiIsUiIiKNIiIiACIiIiQiIiLZIiIib21BEACsWwBBrFsA2KxbAB+oWQEAIiIiACIi
        ImciIiLhIiIiUCIiIgAiIiIAAAAAAAAAAAAAAAAAAAAAACIiIgAiIiIAIiIiUCIiIuEiIiJnIiIiAKhZ
        AQCsWwAerFsA4qxbAGtzQw4AIiIibyIiItkiIiIkIiIiXiIiIuAiIiIsdEQOAKxbAEGsWwDYrFsAH29C
        DwAiIiIZIiIi0SIiIoEiIiIAIiIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiIgAiIiIAIiIigSIi
        ItEiIiIZb0IPAKxbAB6sWwDirFsAa3pGDAAiIiIsIiIi4CIiIl4iIiKhIiIivCIiIgmaUwUArFsAQaxb
        ANisWwAfVTcVACIiIjkiIiLNIiIiKSIiIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIi
        IgAiIiIpIiIizSIiIjlVNxUArFsAHqxbAOKsWwBrnFUEACIiIgkiIiK7IiIioSIiItIiIiKRIiIiAKtb
        AACsWwBBrFsA2KxbAB+LTggAIiIiCyIiIiYiIiIDIiIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIiIiACIiIgMiIiImIiIiC4tNCACsWwAerFsA4qxbAGurWwAAIiIiACIiIpEiIiLSIiIi7yIi
        Im8iIiIArFsAAKxbAEGsWwDYrFsAH6xbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArFsAAKxbAB6sWwDirFsAa6xbAAAiIiIAIiIibyIi
        Iu8iIiL/IiIiaiIiIgCsWwAArFsAQaxbANisWwAfrFsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsWwAArFsAHqxbAOKsWwBrrFsAACIi
        IgAiIiJqIiIi/yIiIv8iIiJqIiIiAKxbAACsWwBBrFsA2KxbAB+sWwAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKxbAACsWwAerFsA4qxb
        AGusWwAAIiIiACIiImoiIiL/IiIi8CIiIm4iIiIArFsAAKxbAEGsWwDYrFsAH6xbAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArFsAAKxb
        AB6sWwDirFsAa6xbAAAiIiIAIiIibiIiIvAiIiLSIiIikCIiIgCrWwAArFsAQaxbANisWwAfrFsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACsWwAArFsAHqxbAOKsWwBrq1sAACIiIgAiIiKQIiIi0iIiIqIiIiK7IiIiCZpUBACsWwBBrFsA2Kxb
        AB+ZUwUAIiIiBCIiIj0iIiJqIiIiMyIiIgIiIiIAAAAAAAAAAAAAAAAAAAAAACIiIgAiIiICIiIiMyIi
        ImoiIiI9IiIiBJlTBQCsWwAerFsA4qxbAGudVQQAIiIiCSIiIrsiIiKiIiIiXyIiIt8iIiIrdUQOAKxb
        AEGsWwDYrFsAH1c4FQAiIiJKIiIi6yIiIv8iIiLfIiIiNCIiIgAAAAAAAAAAAAAAAAAAAAAAIiIiACIi
        IjQiIiLfIiIi/yIiIusiIiJKVzgVAKxbAB6sWwDirFsAa3pHDAAiIiIrIiIi3yIiIl8iIiIlIiIi2SIi
        Im5sQRAArFsAQaxbANisWwAfYDwTACIiIosiIiL/IiIi/yIiIv8iIiJqIiIiAAAAAAAAAAAAAAAAAAAA
        AAAiIiIAIiIiaiIiIv8iIiL/IiIi/yIiIotgPBMArFsAHqxbAOKsWwBrckMOACIiIm4iIiLZIiIiJSIi
        IgAiIiKOIiIixAATKw6uXABArFsA2KxbAB9VNxUAIiIiWSIiIvYiIiL/IiIi7CIiIj8iIiIAAAAAAAAA
        AAAAAAAAAAAAACIiIgAiIiI/IiIi7CIiIv8iIiL2IiIiWVU3FQCsWwAerFsA4q1cAGoADy0NIiIixCIi
        Io4iIiIAIiIiACIiIisiIiLaHSAjbK5cAECsWwDYrFsAH4pNCAAiIiIKIiIiWCIiIo0iIiJLIiIiBCIi
        IgAAAAAAAAAAAAAAAAAAAAAAIiIiACIiIgQiIiJLIiIijSIiIlgiIiIKik0IAKxbAB6sWwDirVwAahwg
        I2siIiLaIiIiKyIiIgAiIiIAIiIiACIiIoAgISPZcUIPcq1cANasWwAfrFsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsWwAArFsAHq1c
        AOCBSQucHyEj2CIiIoAiIiIAIiIiAAAAAAAiIiIAIiIiFR8hI7hIMhnqqloB4K5cADmsWwAdrFsAH6xb
        AB+sWwAfrFsAH6xbAB+sWwAfrFsAH6xbAB+sWwAfrFsAH6xbAB+sWwAfrFsAH6xbAB+sWwAfrFsAH6xb
        AB2tWwA5rlwA5F06E/kfISO3IiIiFSIiIgAAAAAAAAAAACIiIgAiIiIAFx4lL0kyGNSgVgP+qloB4K1c
        ANWsWwDYrFsA2KxbANisWwDYrFsA2KxbANisWwDYrFsA2KxbANisWwDYrFsA2KxbANisWwDYrFsA2Kxb
        ANisWwDYrVwA1alaAeCmWQH9ZD0S0xUdJS8iIiIAAAAAAAAAAAAAAAAAAAAAACIiIgB+SAsARTEZPUky
        GNZIMhnocEIPc7JdAD+vXABArFsAQaxbAEGsWwBBrFsAQaxbAEGsWwBBrFsAQaxbAEGsWwBBrFsAQaxb
        AEGsWwBBr1wAQLJdAD9wQg9zSDIZ6EszGNZdOhQ9j08HACIiIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM
        NwBDNg4AGR4kLx8hI7ggISPbHSAjahAYKQ4dJxoAAABKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABKAB0nGgAQGCkOHSAjaiAhI9sfISO4GR4kL0I2DwAADDcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAiIiIAIiIiEyIiIn4iIiLcIiIixiIiImwiIiIpIiIiCCIiIgAiIiIAAAAAAAAA
        AAAiIiIAIiIiACIiIggiIiIpIiIibCIiIsYiIiLcIiIifiIiIhMiIiIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIAIiIiASIiIioiIiKPIiIi2iIiIuAiIiK7IiIikSIi
        Im8iIiJqIiIiaiIiIm8iIiKRIiIiuyIiIuAiIiLaIiIijyIiIioiIiIBIiIiAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiIiACIiIgIiIiIkIiIiXyIi
        IqMiIiLTIiIi8CIiIv8iIiL/IiIi8CIiItMiIiKjIiIiXiIiIiQiIiICIiIiAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8A8A/+D/8H/AAAA/gAAAHwAAAA8HgB4OBwAOBAYPBgBGP
        8YgRH/iIER/4iDEf+Iwx//+MMf//jDH//4wx//+MMf//jBEH4IgRB+CIEQfgiAEH4ICBB+CBwf//g8AA
        AAPgAAAH8AAAD/g//B/8B+A//gAAf/+AAf8=
</value>
  </data>
</root>